version: '3.9'
services:
    redis:
        image: 'redis:5.0.5'
        # command: redis-server --requirepass redispass

    postgres:
        image: postgres:13.1-alpine
        environment:
            - POSTGRES_USER=airflow
            - POSTGRES_PASSWORD=airflow
            - POSTGRES_DB=airflow
        # Uncomment these lines to persist data on the local filesystem.
            - PGDATA=/var/lib/postgresql/data/pgdata
        ports:
            - "5432:5432"
        volumes:
            - type: bind
              source: /opt/data_works_cloud/data/pgdata
              target: /var/lib/postgresql/data/pgdata

    webserver:
        image: lelkaklel/docker-airflow:latest
        restart: always
        depends_on:
            - postgres
            - redis
        environment:
            - LOAD_EX=n
            - FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
            - EXECUTOR=Celery
            # - POSTGRES_USER=airflow
            # - POSTGRES_PASSWORD=airflow
            # - POSTGRES_DB=airflow
            # - REDIS_PASSWORD=redispass
        volumes:
            - type: bind
              source: /opt/data_works_cloud/shared/airflow/dags
              target: /usr/local/airflow/dags
            # Uncomment to include custom plugins
            - type: bind
              source: /opt/data_works_cloud/shared/airflow/plugins
              target: /usr/local/airflow/plugins
        ports:
            - "8080:8080"
        # configs:
        #    - source: webserver_config
        #      target: /usr/local/airflow/airflow.cfg
        command: webserver
        healthcheck:
            test: ["CMD-SHELL", "[ -f /usr/local/airflow/airflow-webserver.pid ]"]
            interval: 30s
            timeout: 30s
            retries: 3

    flower:
        image: lelkaklel/docker-airflow:latest
        restart: always
        depends_on:
            - redis
        environment:
            - EXECUTOR=Celery
            # - REDIS_PASSWORD=redispass
        ports:
            - "5555:5555"
        command: celery flower

    scheduler:
        image: lelkaklel/docker-airflow:latest
        restart: always
        depends_on:
            - webserver
        volumes:
            - type: bind
              source: /opt/data_works_cloud/shared/airflow/dags
              target: /usr/local/airflow/dags
            # Uncomment to include custom plugins
            - type: bind
              source: /opt/data_works_cloud/shared/airflow/plugins
              target: /usr/local/airflow/plugins
        environment:
            - LOAD_EX=n
            - FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
            - EXECUTOR=Celery
            # - POSTGRES_USER=airflow
            # - POSTGRES_PASSWORD=airflow
            # - POSTGRES_DB=airflow
            # - REDIS_PASSWORD=redispass
        command: scheduler

    worker:
        image: lelkaklel/docker-airflow:latest

        restart: always
        depends_on:
            - scheduler
        volumes:
            - type: bind
              source: /opt/data_works_cloud/shared/airflow/dags
              target: /usr/local/airflow/dags
            # Uncomment to include custom plugins
            - type: bind
              source: /opt/data_works_cloud/shared/airflow/plugins
              target: /usr/local/airflow/plugins
        environment:
            - FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
            - EXECUTOR=Celery
            # - POSTGRES_USER=airflow
            # - POSTGRES_PASSWORD=airflow
            # - POSTGRES_DB=airflow
            # - REDIS_PASSWORD=redispass
        command: celery worker
    zeppelin:
        image: apache/zeppelin:0.9.0
        ports:
            - "8090:8080"
        environment:
            - ZEPPELIN_NOTEBOOK_DIR=/zeppelin/notebook
            - ZEPPELIN_LOG_DIR=/zeppelin/logs
        volumes:
            - type: bind
              source: /opt/data_works_cloud/shared/zeppelin/notebook
              target: /zeppelin/notebook
            # - type: bind
            #  source: ~/sources/data_works_cloud/shared/zeppelin/conf
            #  target: /zeppelin/conf
            - type: bind
              source: /opt/data_works_cloud/shared/zeppelin/logs
              target: /zeppelin/logs
            - zeppelin-interpreter:/zeppelin/interpreter
    omnidb:
        image: taivokasper/omnidb
        ports:
            - "8070:8080"
            - "25482:25482"
        volumes:
            - config-omnidb:/etc/omnidb

volumes:
    config-omnidb:
    zeppelin-interpreter:
